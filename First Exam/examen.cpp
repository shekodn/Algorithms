// Nombre: Sergio Diaz
// Matricula: A01192313
// Solución al examen práctico #1 AD16

#include <cstdlib>
#include <iostream>


using namespace std;

//Datos ficticios para las pruebas

int pixeles[1600] = {3, 5, 7, 7, 9, 9, 9, 10, 10, 10, 11, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 16, 16, 17, 18, 18, 19, 19, 19, 19, 20, 21, 21, 21, 22, 22, 22, 22, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 26, 26, 26, 27, 27, 28, 28, 28, 29, 29, 29, 29, 30, 30, 30, 31, 31, 31, 31, 31, 32, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 35, 35, 36, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 39, 39, 39, 39, 39, 40, 40, 41, 41, 41, 41, 41, 41, 42, 42, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 45, 45, 45, 46, 46, 46, 46, 46, 46, 46, 46, 47, 47, 47, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 49, 50, 51, 51, 51, 51, 51, 51, 51, 51, 52, 52, 52, 52, 53, 53, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 58, 58, 58, 59, 59, 59, 60, 60, 60, 60, 60, 60, 60, 60, 61, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 63, 63, 63, 63, 64, 64, 64, 64, 65, 65, 65, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 67, 67, 67, 67, 67, 67, 67, 67, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 68, 69, 69, 69, 69, 70, 70, 70, 71, 71, 71, 71, 71, 71, 71, 71, 71, 72, 72, 72, 72, 72, 72, 72, 73, 73, 73, 73, 73, 74, 74, 74, 74, 74, 74, 74, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 76, 76, 76, 76, 76, 76, 77, 77, 77, 77, 77, 77, 77, 77, 77, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 79, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 81, 82, 82, 82, 82, 82, 82, 82, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 85, 85, 85, 85, 85, 85, 85, 85, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 87, 87, 87, 87, 87, 88, 88, 88, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 89, 90, 90, 90, 90, 90, 90, 90, 90, 90, 91, 91, 91, 91, 91, 92, 92, 92, 92, 92, 92, 92, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 94, 94, 94, 94, 94, 94, 94, 94, 94, 95, 95, 95, 95, 95, 95, 95, 95, 95, 96, 96, 96, 96, 97, 97, 97, 97, 97, 97, 97, 97, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 98, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 99, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 101, 101, 101, 101, 101, 101, 101, 101, 101, 102, 102, 102, 102, 102, 102, 102, 103, 103, 103, 103, 103, 103, 103, 103, 103, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 104, 105, 105, 105, 105, 106, 106, 106, 106, 106, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 108, 109, 109, 109, 109, 109, 109, 110, 110, 110, 110, 110, 110, 110, 110, 110, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 112, 112, 112, 112, 112, 112, 112, 112, 113, 113, 113, 113, 113, 113, 113, 113, 113, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 115, 115, 115, 115, 115, 115, 115, 116, 116, 116, 116, 116, 116, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 117, 118, 118, 118, 118, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 120, 121, 121, 121, 121, 121, 121, 121, 121, 122, 122, 122, 122, 122, 122, 122, 123, 123, 123, 123, 123, 123, 123, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 125, 125, 125, 125, 125, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 130, 130, 130, 130, 130, 130, 130, 130, 131, 131, 131, 131, 131, 131, 131, 131, 131, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 132, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 135, 135, 135, 135, 135, 135, 135, 135, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 137, 137, 137, 137, 137, 137, 137, 137, 138, 138, 138, 138, 138, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 140, 141, 141, 141, 141, 141, 141, 141, 142, 142, 142, 142, 142, 142, 142, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 144, 144, 144, 144, 144, 144, 144, 144, 144, 145, 145, 145, 145, 145, 145, 145, 145, 146, 146, 146, 146, 146, 146, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 151, 151, 151, 151, 152, 152, 152, 152, 152, 152, 152, 152, 153, 153, 153, 153, 154, 154, 154, 154, 154, 154, 154, 154, 155, 155, 155, 155, 155, 155, 155, 155, 155, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 158, 158, 158, 158, 158, 158, 158, 158, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 161, 161, 161, 161, 161, 161, 161, 162, 162, 162, 162, 162, 162, 162, 162, 163, 163, 163, 163, 163, 163, 163, 163, 163, 164, 164, 164, 164, 164, 164, 164, 164, 165, 165, 165, 165, 166, 166, 166, 166, 166, 166, 166, 166, 167, 167, 167, 167, 167, 167, 167, 167, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 169, 169, 169, 169, 169, 169, 169, 169, 169, 170, 170, 170, 170, 170, 170, 171, 171, 171, 171, 171, 171, 171, 171, 171, 171, 172, 172, 172, 173, 173, 173, 173, 173, 173, 173, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 174, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 176, 176, 176, 176, 176, 176, 176, 176, 176, 177, 177, 177, 177, 177, 177, 177, 177, 177, 177, 178, 178, 178, 178, 178, 178, 178, 178, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 180, 180, 180, 180, 180, 180, 180, 180, 181, 181, 181, 181, 181, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 183, 183, 183, 183, 183, 183, 184, 184, 184, 184, 184, 184, 184, 185, 185, 185, 185, 185, 185, 185, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 187, 187, 187, 187, 187, 187, 187, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 189, 189, 189, 189, 189, 189, 189, 189, 189, 190, 190, 190, 190, 190, 190, 190, 190, 190, 191, 191, 191, 191, 191, 191, 192, 192, 192, 192, 192, 192, 192, 193, 193, 193, 193, 193, 193, 194, 194, 194, 194, 194, 194, 194, 195, 195, 195, 195, 195, 195, 195, 195, 195, 196, 196, 196, 196, 196, 196, 196, 196, 196, 197, 197, 197, 197, 197, 197, 197, 198, 198, 198, 198, 198, 198, 199, 199, 199, 199, 199, 199, 200, 200, 200, 200, 200, 200, 200, 200, 201, 201, 201, 201, 201, 201, 201, 201, 201, 201, 202, 202, 202, 202, 202, 203, 203, 203, 203, 203, 203, 204, 204, 204, 204, 204, 205, 205, 205, 205, 205, 206, 206, 206, 206, 206, 207, 207, 207, 208, 208, 208, 209, 209, 209, 209, 209, 209, 210, 210, 210, 210, 211, 211, 211, 212, 212, 212, 212, 212, 213, 213, 213, 214, 214, 214, 214, 214, 215, 215, 215, 216, 216, 216, 216, 216, 217, 217, 217, 218, 218, 218, 218, 218, 218, 218, 218, 219, 219, 219, 219, 219, 219, 219, 220, 220, 221, 221, 221, 221, 222, 222, 222, 223, 223, 224, 224, 224, 224, 225, 225, 225, 225, 225, 226, 226, 227, 228, 228, 229, 229, 229, 229, 230, 230, 231, 231, 232, 232, 232, 233, 234, 235, 236, 236, 238, 239, 239, 240, 241, 243, 243, 245, 248};


// Problema 1
// Escribe aqui la implementación de las funciones del problema 1

//busca el limite inferior en donde esta ubicado el numero de pixel dado
float buscaColorInferior(int arr[], int inicio, int fin, int color){

	int mitad = (inicio + fin) / 2;
	float iIndex;

	if(inicio > fin){
		return -1;
	} else{

		if(color == arr[mitad] && arr[mitad] > arr[mitad - 1]){ //NO BORRAR
		//if(color == arr[mitad] && arr[mitad + 1] > arr[mitad]){ //NO BORRAR

			return mitad;
		}

		else{
			 if(color < arr[mitad]){
				 iIndex = buscaColorInferior(arr, inicio, mitad-1, color);
			 }
			 else{
				iIndex = buscaColorInferior(arr, mitad + 1, fin, color);
			 }

		}
	}

	return iIndex;

}

//funcion que saca promedio y multiplica x100 para sacar el porcentaje
float promedioPixeles(float n, float cantidad){

	float fPromedio = n/cantidad;
	return fPromedio*100;
}


//busca el limite superior en donde esta ubicado el numero de pixel dado
float buscaColorMayor(int arr[], int inicio, int fin, int color){

	int mitad = (inicio + fin) / 2;
	float iIndex;

	if(inicio > fin){
		return -1;
	} else{

		//if(color == arr[mitad] && arr[mitad] > arr[mitad - 1]){ //NO BORRAR
		if(color == arr[mitad] && arr[mitad + 1] > arr[mitad]){ //NO BORRAR

			return mitad;
		}

		else{
			 if(color < arr[mitad]){
				 iIndex = buscaColorMayor(arr, inicio, mitad-1, color);
			 }
			 else{
				iIndex = buscaColorMayor(arr, mitad + 1, fin, color);
			 }

		}
	}

	return iIndex;

}

//Saca cuantos piexeles de cierto colo hay en un arreglo de pixeles
float problemaPixeles(int arr[], int inicio, int fin, int pixel){

	float iA;
	float iB;

	iA = buscaColorInferior(arr, inicio, fin, pixel);
	iB = buscaColorMayor(arr, inicio, fin, pixel);


	if(iA + iB >= 0){
		return (iB - iA) + 1;
	} else{
		return 0;
	}
}


//Datos ficticios para las pruebas
int caminosNL[51][51] = {{0, 99999, 270, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 75, 66, 63, 60, 99999, 660, 99999, 99999, 585, 99999, 615, 99999, 99999, 99999, 99999, 64, 99999, 99999, 99999, 99999, 99999, 540, 99999, 70, 99999, 195, 66, 99999, 105, 72, 51, 99999, 99999, 99999, 165, 510, 99999, 75, 645}, { 99999, 0, 72, 390, 99999, 99999, 585, 99999, 99999, 99999, 99999, 56, 99999, 195, 99999, 99999, 99999, 99999, 525, 99999, 72, 99999, 495, 99999, 77, 99999, 99999, 99999, 99999, 390, 80, 99999, 435, 45, 99999, 64, 99999, 390, 99999, 99999, 420, 99999, 66, 570, 165, 99999, 99999, 67, 99999, 195, 30}, { 270, 72, 0, 99999, 405, 99999, 480, 99999, 99999, 720, 99999, 99999, 180, 99999, 99999, 79, 99999, 53, 585, 255, 675, 630, 99999, 99999, 330, 60, 99999, 720, 210, 99999, 540, 99999, 99999, 74, 330, 99999, 99999, 645, 345, 99999, 195, 585, 99999, 99999, 99999, 99999, 375, 79, 99999, 675, 99999}, { 99999, 390, 99999, 0, 99999, 390, 99999, 735, 99999, 465, 90, 99999, 74, 225, 210, 99999, 99999, 99999, 51, 495, 45, 150, 99999, 74, 99999, 75, 150, 15, 99999, 99999, 99999, 705, 99999, 465, 210, 99999, 99999, 99999, 99999, 99999, 555, 99999, 99999, 99999, 99999, 240, 51, 74, 99999, 77, 99999}, { 99999, 99999, 405, 99999, 0, 99999, 525, 510, 99999, 345, 70, 74, 99999, 99999, 99999, 99999, 525, 60, 645, 99999, 99999, 57, 195, 720, 99999, 68, 99999, 660, 90, 99999, 90, 99999, 99999, 99999, 99999, 61, 315, 99999, 99999, 99999, 66, 99999, 99999, 99999, 105, 99999, 99999, 64, 99999, 99999, 52}, { 99999, 99999, 99999, 390, 99999, 0, 99999, 99999, 555, 45, 99999, 99999, 99999, 99999, 60, 99999, 165, 99999, 75, 99999, 99999, 45, 99999, 99999, 99999, 69, 99999, 99999, 99999, 71, 420, 99999, 720, 99999, 99999, 165, 645, 99999, 99999, 99999, 99999, 390, 99999, 99999, 99999, 61, 99999, 99999, 90, 67, 735}, { 99999, 585, 480, 99999, 525, 99999, 0, 99999, 99999, 675, 60, 99999, 570, 525, 99999, 615, 67, 99999, 120, 99999, 71, 420, 540, 99999, 315, 75, 99999, 53, 60, 99999, 77, 99999, 99999, 735, 690, 80, 99999, 375, 99999, 99999, 70, 99999, 615, 705, 99999, 72, 99999, 315, 99999, 99999, 99999}, { 99999, 99999, 99999, 735, 510, 99999, 99999, 0, 60, 99999, 390, 99999, 330, 99999, 99999, 99999, 450, 99999, 99999, 615, 99999, 660, 50, 99999, 73, 600, 99999, 705, 99999, 99999, 65, 99999, 525, 99999, 99999, 99999, 65, 99999, 135, 165, 51, 52, 75, 99999, 675, 55, 30, 65, 60, 99999, 495}, { 99999, 99999, 99999, 99999, 99999, 555, 99999, 60, 0, 99999, 99999, 99999, 240, 75, 63, 63, 99999, 99999, 270, 99999, 99999, 570, 99999, 240, 99999, 50, 99999, 79, 99999, 675, 99999, 300, 99999, 99999, 99999, 70, 420, 99999, 705, 135, 390, 105, 375, 99999, 315, 99999, 99999, 76, 99999, 99999, 99999}, { 99999, 99999, 720, 465, 345, 45, 675, 99999, 99999, 0, 99999, 56, 64, 99999, 165, 99999, 405, 99999, 99999, 99999, 61, 99999, 105, 120, 99999, 99999, 99999, 90, 99999, 99999, 540, 615, 99999, 225, 57, 99999, 99999, 375, 99999, 99999, 135, 59, 405, 705, 99999, 135, 45, 70, 99999, 99999, 330}, { 99999, 99999, 99999, 90, 70, 99999, 60, 390, 99999, 99999, 0, 99999, 480, 675, 99999, 60, 99999, 99999, 570, 99999, 99999, 99999, 99999, 180, 50, 99999, 675, 165, 99999, 99999, 99999, 99999, 99999, 555, 99999, 60, 99999, 285, 285, 77, 99999, 77, 99999, 62, 99999, 99999, 99999, 99999, 75, 165, 99999}, { 99999, 56, 99999, 99999, 74, 99999, 99999, 99999, 99999, 56, 99999, 0, 61, 99999, 99999, 99999, 99999, 75, 99999, 99999, 99999, 99999, 99999, 405, 99999, 99999, 150, 390, 630, 99999, 52, 600, 75, 435, 99999, 99999, 99999, 99999, 99999, 99999, 435, 99999, 645, 79, 99999, 99999, 99999, 99999, 99999, 99999, 99999}, { 75, 99999, 180, 74, 99999, 99999, 570, 330, 240, 64, 480, 61, 0, 345, 99999, 68, 68, 70, 99999, 99999, 99999, 99999, 61, 68, 99999, 690, 99999, 63, 99999, 99999, 99999, 99999, 285, 63, 210, 99999, 75, 99999, 360, 99999, 99999, 99999, 57, 60, 68, 420, 99999, 99999, 60, 55, 99999}, { 66, 195, 99999, 225, 99999, 99999, 525, 99999, 75, 99999, 675, 99999, 345, 0, 73, 50, 99999, 99999, 59, 79, 240, 99999, 660, 300, 495, 99999, 99999, 135, 99999, 495, 99999, 585, 180, 62, 99999, 690, 99999, 99999, 225, 99999, 58, 99999, 68, 99999, 405, 99999, 99999, 99999, 99999, 99999, 225}, { 63, 99999, 99999, 210, 99999, 60, 99999, 99999, 63, 165, 99999, 99999, 99999, 73, 0, 705, 56, 72, 54, 99999, 405, 99999, 99999, 450, 99999, 99999, 68, 70, 68, 150, 99999, 135, 99999, 99999, 660, 62, 90, 600, 99999, 735, 99999, 465, 58, 180, 99999, 645, 99999, 99999, 71, 99999, 99999}, { 60, 99999, 79, 99999, 99999, 99999, 615, 99999, 63, 99999, 60, 99999, 68, 50, 705, 0, 99999, 58, 99999, 99999, 99999, 69, 99999, 99999, 465, 99999, 56, 63, 51, 80, 74, 71, 51, 99999, 90, 30, 68, 690, 90, 99999, 99999, 600, 99999, 99999, 62, 630, 705, 99999, 99999, 56, 99999}, { 99999, 99999, 99999, 99999, 525, 165, 67, 450, 99999, 405, 99999, 99999, 68, 99999, 56, 99999, 0, 270, 99999, 99999, 99999, 255, 99999, 99999, 99999, 450, 99999, 285, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 75, 99999, 68, 99999, 99999, 99999, 99999, 99999, 150, 99999, 70, 99999, 330, 64}, { 660, 99999, 53, 99999, 60, 99999, 99999, 99999, 99999, 99999, 99999, 75, 70, 99999, 72, 58, 270, 0, 99999, 195, 99999, 99999, 99999, 99999, 99999, 99999, 255, 45, 99999, 99999, 15, 99999, 99999, 285, 60, 675, 77, 52, 99999, 99999, 645, 135, 99999, 285, 555, 99999, 99999, 480, 720, 66, 99999}, { 99999, 525, 585, 51, 645, 75, 120, 99999, 270, 99999, 570, 99999, 99999, 59, 54, 99999, 99999, 99999, 0, 99999, 99999, 99999, 64, 78, 99999, 64, 99999, 99999, 99999, 60, 60, 78, 60, 63, 99999, 99999, 50, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 225, 120, 99999, 77, 345}, { 99999, 99999, 255, 495, 99999, 99999, 99999, 615, 99999, 99999, 99999, 99999, 99999, 79, 99999, 99999, 99999, 195, 99999, 0, 99999, 570, 255, 99999, 99999, 71, 99999, 99999, 555, 99999, 615, 52, 99999, 150, 99999, 55, 78, 99999, 99999, 300, 99999, 150, 99999, 99999, 99999, 99999, 76, 120, 74, 99999, 77}, { 585, 72, 675, 45, 99999, 99999, 71, 99999, 99999, 61, 99999, 99999, 99999, 240, 405, 99999, 99999, 99999, 99999, 99999, 0, 99999, 69, 270, 99999, 99999, 15, 53, 99999, 99999, 75, 99999, 495, 99999, 99999, 99999, 99999, 720, 450, 645, 45, 99999, 51, 99999, 55, 51, 480, 55, 99999, 720, 99999}, { 99999, 99999, 630, 150, 57, 45, 420, 660, 570, 99999, 99999, 99999, 99999, 99999, 99999, 69, 255, 99999, 99999, 570, 99999, 0, 99999, 99999, 99999, 68, 65, 465, 73, 99999, 99999, 69, 99999, 99999, 57, 99999, 99999, 225, 99999, 63, 99999, 99999, 99999, 135, 99999, 135, 99999, 270, 99999, 285, 99999}, { 615, 495, 99999, 99999, 195, 99999, 540, 50, 99999, 105, 99999, 99999, 61, 660, 99999, 99999, 99999, 99999, 64, 255, 69, 99999, 0, 660, 99999, 99999, 51, 99999, 67, 80, 75, 99999, 225, 65, 720, 73, 99999, 99999, 59, 50, 195, 99999, 99999, 99999, 99999, 450, 120, 79, 525, 99999, 99999}, { 99999, 99999, 99999, 74, 720, 99999, 99999, 99999, 240, 120, 180, 405, 68, 300, 450, 99999, 99999, 99999, 78, 99999, 270, 99999, 660, 0, 99999, 15, 450, 99999, 525, 99999, 645, 450, 70, 15, 99999, 99999, 165, 99999, 99999, 99999, 73, 70, 600, 195, 99999, 75, 435, 165, 240, 99999, 99999}, { 99999, 77, 330, 99999, 99999, 99999, 315, 73, 99999, 99999, 50, 99999, 99999, 495, 99999, 465, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 0, 735, 720, 240, 99999, 99999, 50, 99999, 330, 71, 30, 99999, 285, 315, 99999, 585, 99999, 630, 99999, 195, 99999, 450, 675, 99999, 99999, 255, 99999}, { 99999, 99999, 60, 75, 68, 69, 75, 600, 50, 99999, 99999, 99999, 690, 99999, 99999, 99999, 450, 99999, 64, 71, 99999, 68, 99999, 15, 735, 0, 99999, 99999, 540, 435, 99999, 99999, 71, 99999, 53, 690, 99999, 60, 585, 465, 525, 99999, 99999, 99999, 375, 99999, 69, 99999, 285, 270, 525}, { 99999, 99999, 99999, 150, 99999, 99999, 99999, 99999, 99999, 99999, 675, 150, 99999, 99999, 68, 56, 99999, 255, 99999, 99999, 15, 65, 51, 450, 720, 99999, 0, 540, 61, 63, 99999, 99999, 99999, 99999, 69, 180, 99999, 99999, 99999, 615, 99999, 99999, 73, 57, 70, 15, 99999, 180, 99999, 99999, 90}, { 64, 99999, 720, 15, 660, 99999, 53, 705, 79, 90, 165, 390, 63, 135, 70, 63, 285, 45, 99999, 99999, 53, 465, 99999, 99999, 240, 99999, 540, 0, 99999, 645, 99999, 99999, 99999, 99999, 61, 99999, 67, 99999, 61, 390, 465, 390, 165, 99999, 99999, 450, 150, 99999, 525, 99999, 70}, { 99999, 99999, 210, 99999, 90, 99999, 60, 99999, 99999, 99999, 99999, 630, 99999, 99999, 68, 51, 99999, 99999, 99999, 555, 99999, 73, 67, 525, 99999, 540, 61, 99999, 0, 99999, 75, 99999, 57, 525, 51, 270, 99999, 99999, 630, 99999, 99999, 195, 30, 99999, 450, 135, 210, 99999, 90, 15, 510}, { 99999, 390, 99999, 99999, 99999, 71, 99999, 99999, 675, 99999, 99999, 99999, 99999, 495, 150, 80, 99999, 99999, 60, 99999, 99999, 99999, 80, 99999, 99999, 435, 63, 645, 99999, 0, 99999, 99999, 99999, 75, 99999, 61, 68, 99999, 99999, 99999, 53, 375, 210, 70, 435, 630, 600, 99999, 99999, 99999, 675}, { 99999, 80, 540, 99999, 90, 420, 77, 65, 99999, 540, 99999, 52, 99999, 99999, 99999, 74, 99999, 15, 60, 615, 75, 99999, 75, 645, 50, 99999, 99999, 99999, 75, 99999, 0, 53, 99999, 615, 70, 585, 300, 525, 99999, 99999, 120, 60, 99999, 99999, 51, 65, 99999, 99999, 99999, 99999, 99999}, { 99999, 99999, 99999, 705, 99999, 99999, 99999, 99999, 300, 615, 99999, 600, 99999, 585, 135, 71, 99999, 99999, 78, 52, 99999, 69, 99999, 450, 99999, 99999, 99999, 99999, 99999, 99999, 53, 0, 225, 105, 99999, 375, 480, 99999, 68, 99999, 99999, 99999, 690, 99999, 99999, 99999, 99999, 99999, 99999, 99999, 70}, { 99999, 435, 99999, 99999, 99999, 720, 99999, 525, 99999, 99999, 99999, 75, 285, 180, 99999, 51, 99999, 99999, 60, 99999, 495, 99999, 225, 70, 330, 71, 99999, 99999, 57, 99999, 99999, 225, 0, 99999, 99999, 99999, 510, 55, 99999, 57, 99999, 90, 99999, 735, 555, 99999, 99999, 99999, 435, 360, 69}, { 540, 45, 74, 465, 99999, 99999, 735, 99999, 99999, 225, 555, 435, 63, 62, 99999, 99999, 99999, 285, 63, 150, 99999, 99999, 65, 15, 71, 99999, 99999, 99999, 525, 75, 615, 105, 99999, 0, 630, 99999, 99999, 60, 99999, 99999, 525, 99999, 195, 99999, 240, 99999, 99999, 165, 59, 99999, 270}, { 99999, 99999, 330, 210, 99999, 99999, 690, 99999, 99999, 57, 99999, 99999, 210, 99999, 660, 90, 99999, 60, 99999, 99999, 99999, 57, 720, 99999, 30, 53, 69, 61, 51, 99999, 70, 99999, 99999, 630, 0, 56, 99999, 210, 225, 735, 510, 15, 165, 67, 480, 59, 90, 99999, 120, 510, 51}, { 70, 64, 99999, 99999, 61, 165, 80, 99999, 70, 99999, 60, 99999, 99999, 690, 62, 30, 99999, 675, 99999, 55, 99999, 99999, 73, 99999, 99999, 690, 180, 99999, 270, 61, 585, 375, 99999, 99999, 56, 0, 99999, 99999, 99999, 99999, 75, 360, 675, 99999, 360, 300, 99999, 99999, 15, 99999, 99999}, { 99999, 99999, 99999, 99999, 315, 645, 99999, 65, 420, 99999, 99999, 99999, 75, 99999, 90, 68, 99999, 77, 50, 78, 99999, 99999, 99999, 165, 285, 99999, 99999, 67, 99999, 68, 300, 480, 510, 99999, 99999, 99999, 0, 735, 630, 690, 99999, 390, 360, 420, 99999, 99999, 99999, 80, 69, 720, 600}, { 195, 390, 645, 99999, 99999, 99999, 375, 99999, 99999, 375, 285, 99999, 99999, 99999, 600, 690, 75, 52, 99999, 99999, 720, 225, 99999, 99999, 315, 60, 99999, 99999, 99999, 99999, 525, 99999, 55, 60, 210, 99999, 735, 0, 99999, 75, 75, 99999, 55, 690, 690, 99999, 75, 99999, 99999, 570, 570}, { 66, 99999, 345, 99999, 99999, 99999, 99999, 135, 705, 99999, 285, 99999, 360, 225, 99999, 90, 99999, 99999, 99999, 99999, 450, 99999, 59, 99999, 99999, 585, 99999, 61, 630, 99999, 99999, 68, 99999, 99999, 225, 99999, 630, 99999, 0, 51, 630, 270, 76, 99999, 59, 99999, 71, 405, 52, 99999, 99999}, { 99999, 99999, 99999, 99999, 99999, 99999, 99999, 165, 135, 99999, 77, 99999, 99999, 99999, 735, 99999, 68, 99999, 99999, 300, 645, 63, 50, 99999, 585, 465, 615, 390, 99999, 99999, 99999, 99999, 57, 99999, 735, 99999, 690, 75, 51, 0, 615, 690, 99999, 180, 99999, 99999, 75, 77, 390, 555, 52}, { 105, 420, 195, 555, 66, 99999, 70, 51, 390, 135, 99999, 435, 99999, 58, 99999, 99999, 99999, 645, 99999, 99999, 45, 99999, 195, 73, 99999, 525, 99999, 465, 99999, 53, 120, 99999, 99999, 525, 510, 75, 99999, 75, 630, 615, 0, 30, 660, 180, 120, 285, 99999, 79, 99999, 99999, 570}, { 72, 99999, 585, 99999, 99999, 390, 99999, 52, 105, 59, 77, 99999, 99999, 99999, 465, 600, 99999, 135, 99999, 150, 99999, 99999, 99999, 70, 630, 99999, 99999, 390, 195, 375, 60, 99999, 90, 99999, 15, 360, 390, 99999, 270, 690, 30, 0, 53, 99999, 99999, 99999, 705, 315, 99999, 555, 480}, { 51, 66, 99999, 99999, 99999, 99999, 615, 75, 375, 405, 99999, 645, 57, 68, 58, 99999, 99999, 99999, 99999, 99999, 51, 99999, 99999, 600, 99999, 99999, 73, 165, 30, 210, 99999, 690, 99999, 195, 165, 675, 360, 55, 76, 99999, 660, 53, 0, 99999, 570, 99999, 99999, 615, 99999, 99999, 345}, { 99999, 570, 99999, 99999, 99999, 99999, 705, 99999, 99999, 705, 62, 79, 60, 99999, 180, 99999, 99999, 285, 99999, 99999, 99999, 135, 99999, 195, 195, 99999, 57, 99999, 99999, 70, 99999, 99999, 735, 99999, 67, 99999, 420, 690, 99999, 180, 180, 99999, 99999, 0, 58, 99999, 61, 65, 99999, 615, 99999}, { 99999, 165, 99999, 99999, 105, 99999, 99999, 675, 315, 99999, 99999, 99999, 68, 405, 99999, 62, 99999, 555, 99999, 99999, 55, 99999, 99999, 99999, 99999, 375, 70, 99999, 450, 435, 51, 99999, 555, 240, 480, 360, 99999, 690, 59, 99999, 120, 99999, 570, 58, 0, 99999, 60, 210, 270, 52, 99999}, { 99999, 99999, 99999, 240, 99999, 61, 72, 55, 99999, 135, 99999, 99999, 420, 99999, 645, 630, 150, 99999, 99999, 99999, 51, 135, 450, 75, 450, 99999, 15, 450, 135, 630, 65, 99999, 99999, 99999, 59, 300, 99999, 99999, 99999, 99999, 285, 99999, 99999, 99999, 99999, 0, 120, 61, 510, 99999, 99999}, { 165, 99999, 375, 51, 99999, 99999, 99999, 30, 99999, 45, 99999, 99999, 99999, 99999, 99999, 705, 99999, 99999, 225, 76, 480, 99999, 120, 435, 675, 69, 99999, 150, 210, 600, 99999, 99999, 99999, 99999, 90, 99999, 99999, 75, 71, 75, 99999, 705, 99999, 61, 60, 120, 0, 510, 99999, 99999, 60}, { 510, 67, 79, 74, 64, 99999, 315, 65, 76, 70, 99999, 99999, 99999, 99999, 99999, 99999, 70, 480, 120, 120, 55, 270, 79, 165, 99999, 99999, 180, 99999, 99999, 99999, 99999, 99999, 99999, 165, 99999, 99999, 80, 99999, 405, 77, 79, 315, 615, 65, 210, 315, 510, 0, 74, 99999, 45}, { 99999, 99999, 99999, 99999, 99999, 90, 99999, 60, 99999, 99999, 75, 99999, 60, 99999, 71, 99999, 99999, 720, 99999, 74, 99999, 99999, 525, 240, 99999, 285, 99999, 525, 90, 99999, 99999, 99999, 435, 59, 120, 15, 69, 99999, 52, 390, 99999, 99999, 99999, 99999, 270, 99999, 99999, 74, 0, 99999, 210}, { 75, 195, 675, 77, 99999, 67, 99999, 99999, 99999, 99999, 165, 99999, 55, 99999, 99999, 56, 330, 66, 77, 99999, 720, 285, 99999, 99999, 255, 270, 99999, 99999, 15, 99999, 99999, 99999, 360, 99999, 510, 99999, 720, 570, 99999, 555, 99999, 555, 99999, 615, 52, 99999, 99999, 99999, 99999, 0, 240}, { 645, 30, 99999, 99999, 52, 735, 99999, 495, 99999, 330, 99999, 99999, 99999, 225, 99999, 99999, 64, 99999, 345, 77, 99999, 99999, 99999, 99999, 99999, 525, 90, 70, 510, 675, 99999, 70, 69, 270, 51, 99999, 600, 570, 99999, 52, 570, 480, 345, 99999, 99999, 105, 60, 45, 210, 240, 0}};

int calizNL[3][3] = {{0, 99999, 270}, { 99999, 0, 72}, { 270, 72, 0}};


// Problema 2
// Escribe aqui la implementación de las funciones del problema 2

int minimo(int a, int b){

	int minimo;

	if(a < b ){
		return a;
	}
	return b;
}

int floyd(int arr[51][51], int n){

	for(int k = 0; k < n; k++ ){
		for(int i = 0; i < n; i++ ){
			for(int j = 0; j < n; j++ ){
				minimo(arr[i][j], arr[i][k] + arr[k][j]);
			}
		}
	}
}


void llenaArrTemp(int arrTemp[51][51], int arrOriginal[51][51], int n){
	for(int i = 0; i < n; i++ ){
		for(int j = 0; j < n; j++ ){
			arrTemp[i][j] = arrOriginal[i][j];
		}
	}
}

void printMatrix51(int arr[51][51], int n){

	for(int i = 0; i < n; i++ ){
		for(int j = 0; j < n; j++ ){
			cout << arr[i][j] << "\t";
		}
		cout << endl << endl;
	}
}

void printMatrixANSWER(int arr[51][51], int n, int municipio){

	for(int i = 0; i < n; i++ ){
		for(int j = 0; j < n; j++ ){
			if(arr[municipio][j] <= 800 &&  arr[i][j] > 0 && arr[municipio][j] != 99999){

				arr[municipio][j] = 800 - arr[i][j];

				if(municipio == j && arr[municipio][j] >= 0){
					cout << "municipio # " << i << " gasolina restante: " << arr[municipio][j] << endl;
				}
			}

			if(i==j){
				arr[i][j] = 0;
				//cout << arr[municipio][j] << "\t";
			}
			else{
				arr[i][j] = 99999;
				//cout << arr[municipio][j] << "\t";
			}



		}
	}
}



/*
////
int floydCaliz(int arr[3][3], int n){

	for(int k = 0; k < n; k++ ){
		for(int i = 0; i < n; i++ ){
			for(int j = 0; j < n; j++ ){
				minimo(arr[i][j], arr[i][k] + arr[k][j]);
			}
		}
	}
}

void printMatrixCaliz(int arr[3][3], int n){

	for(int i = 0; i < n; i++ ){
		for(int j = 0; j < n; j++ ){
			cout << arr[i][j] << "\t";
		}
		cout << endl;
	}
}
*/





int main()
{
	int arrTemp[51][51];
/*

	cout << " Que problema desea? a o b " << endl;
	char input;
	cin >> input;

	while(input == 'a' || input == 'b'){

		if(input == 'a'){

			cout << " inserte el numero del pixel que quiera buscar? 0-255 " << endl;
			float n;
			float inputA;
			cin >> inputA;

			n = promedioPixeles(problemaPixeles(pixeles, 0, 1599, inputA), 1600);
			cout << "Porcentaje: " << n << " %" << endl;
			cout << endl;
		}
		else{

			cout << "Inserte el numero del municipio " << endl;
			int inputB;
			cin >> inputB;

			llenaArrTemp(arrTemp, caminosNL, 51);


			floyd(arrTemp,51);
			printMatrixANSWER(arrTemp,51,inputB); //params = (arreglo con municipios,tamano del arreglo, numero de municio en el que se quiere obtener los tanques de gasolina)
		}

		cout << endl;
		cout << " Que problema desea? a o b " << endl;
		cin >> input;
	}

*/
	//PROBLEMA 1
    //Escribe aqui las llamadas para probar y responder preguntas del examen
    //system("pause");
	//int caliz[10] = {3,5,7,7,9,9,9,10,10,10};
	//cout << problemaPixeles(caliz, 0, 9, 3) << endl;
	//float n = promedioPixeles(problemaPixeles(pixeles, 0, 1599, 13), 1600);
	//cout << "Porcentaje: " << n << " %" << endl;



	///////////////////////////////////////////////////////////////////////


	//printMatrix51(caminosNL,51);
	//floyd(caminosNL,51);
	//printMatrix51(caminosNL,51);
	//cout << "Answer" << endl << endl << endl << endl;
//	printMatrixANSWER(caminosNL,51,20); //params = (arreglo con municipios,tamano del arreglo, numero de municio en el que se quiere obtener los tanques de gasolina)


	printMatrix51(caminosNL,51);


}
